{"version":3,"sources":["webpack:///./examples/expandedRowRender.js"],"names":["tableData","key","a","b","c","d","Demo","state","data","expandedRowKeys","expandIconAsCell","expandRowByClick","onExpand","expanded","record","console","log","onExpandedRowsChange","setState","rows","onExpandIconAsCellChange","e","target","checked","onExpandRowByClickChange","columns","title","dataIndex","width","render","renderAction","length","closeAll","openAll","index","splice","o","row","remove","toggleButton","display","indent","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"examples/expandedRowRender.js","sourcesContent":["/* eslint-disable no-console,func-names,react/no-multi-comp */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from 'rc-table';\nimport 'rc-table/assets/index.less';\n\nconst tableData = [\n  { key: 0, a: '123' },\n  { key: 1, a: 'cdd', b: 'edd' },\n  { key: 2, a: '1333', c: 'eee', d: 2 },\n];\n\nclass Demo extends React.Component {\n  state = {\n    data: tableData,\n    expandedRowKeys: [],\n    expandIconAsCell: true,\n    expandRowByClick: false,\n  };\n\n  onExpand = (expanded, record) => {\n    console.log('onExpand', expanded, record);\n  };\n\n  onExpandedRowsChange = rows => {\n    this.setState({\n      expandedRowKeys: rows,\n    });\n  };\n\n  onExpandIconAsCellChange = e => {\n    this.setState({\n      expandIconAsCell: e.target.checked,\n    });\n  };\n\n  onExpandRowByClickChange = e => {\n    this.setState({\n      expandRowByClick: e.target.checked,\n    });\n  };\n\n  columns = [\n    { title: 'title 1', dataIndex: 'a', key: 'a', width: 100 },\n    { title: 'title 2', dataIndex: 'b', key: 'b', width: 100 },\n    { title: 'title 3', dataIndex: 'c', key: 'c', width: 200 },\n    { title: 'Operation', dataIndex: '', key: 'x', render: this.renderAction },\n  ];\n\n  toggleButton() {\n    if (this.state.expandedRowKeys.length) {\n      const closeAll = () => this.setState({ expandedRowKeys: [] });\n      return <button onClick={closeAll}>Close All</button>;\n    }\n    const openAll = () => this.setState({ expandedRowKeys: [0, 1, 2] });\n    return <button onClick={openAll}>Expand All</button>;\n  }\n\n  remove(index) {\n    const data = this.state.data;\n    data.splice(index, 1);\n    this.setState({ data });\n  }\n\n  renderAction(o, row, index) {\n    return (\n      <a href=\"#\" onClick={() => this.remove(index)}>\n        Delete\n      </a>\n    );\n  }\n\n  render() {\n    const { expandIconAsCell, expandRowByClick, expandedRowKeys, data } = this.state;\n    return (\n      <div>\n        {this.toggleButton()}\n        <span style={{ display: 'inline-block', width: 20 }} />\n        <input\n          type=\"checkbox\"\n          checked={expandIconAsCell}\n          onChange={this.onExpandIconAsCellChange}\n        />\n        expandIconAsCell\n        <span style={{ display: 'inline-block', width: 20 }} />\n        <input\n          type=\"checkbox\"\n          checked={expandRowByClick}\n          onChange={this.onExpandRowByClickChange}\n        />\n        expandRowByClick\n        <Table\n          columns={this.columns}\n          expandIconAsCell={expandIconAsCell}\n          expandRowByClick={expandRowByClick}\n          expandedRowRender={(record, index, indent, expanded) =>\n            expanded ? <p>extra: {record.a}</p> : null\n          }\n          expandedRowKeys={expandedRowKeys}\n          onExpandedRowsChange={this.onExpandedRowsChange}\n          onExpand={this.onExpand}\n          data={data}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <div>\n    <h2>expandedRowRender</h2>\n    <Demo />\n  </div>,\n  document.getElementById('__react-content'),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./examples/expandedRowRender.js"],"sourceRoot":""}